{"version":3,"sources":["components/selected/selected.js","components/checkbox/checkbox.js","components/goods/goods.js","store/actions/changeItemInCart.js","containers/Goods.js","components/advantage/advantage.js","components/cart/cart.js","containers/Cart.js","store/store.js","store/reducers/goods.js","App.js","serviceWorker.js","index.js"],"names":["Selected","this","props","count","react_default","a","createElement","className","Link","to","Component","Checkbox","_this","htmlFor","id","type","onChange","checked","Goods","trend","cost","String","fromCharCode","repeat","goods","map","item","key","title","rate","comments","comment","components_checkbox_checkbox","changeItemInCart","cart","indexOf","selected_selected","length","GoodsContainer","components_goods_goods","mapDispatchToProps","connect","state","Advantage","Card","advantage_advantage","find","element","join","cartEmpty","cartNoEmpty","CartContainer","cart_cart","createStore","arguments","undefined","action","Object","objectSpread","concat","toConsumableArray","filter","App","es","store","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60952b9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './selected.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Selected extends Component {\r\n    render() {\r\n        if(this.props.count > 0) {\r\n            return (<div className={'select-box select-box-red'}>\r\n                Вы выбрали <span className={'count-in-cart'}>{this.props.count}</span> {this.props.count > 1 ? 'товара' : 'товар'}\r\n                <Link className={'cart-link'} to='/shopping_cart'>Перейти в корзину</Link>\r\n            </div>)\r\n        } else {\r\n            return (<div className={'select-box'}>Пожалуйста, отметьте галочками несколько товаров</div>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Selected;\r\n","import React, { Component } from 'react';\r\nimport './checkbox.css'\r\n\r\nclass Checkbox extends Component {\r\n    render() {\r\n        return (\r\n            <label className={'checkbox'} htmlFor={'box-' + this.props.id}>\r\n                <input type=\"checkbox\"\r\n                       onChange={() => this.props.onChange(this.props.id)}\r\n                       checked={this.props.checked}\r\n                       id={'box-' + this.props.id}/>\r\n                <span className=\"checkbox__rect\">\r\n                    <span className=\"checkbox__cross\"></span>\r\n                </span>\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, { Component } from 'react';\r\nimport Selected from '../selected/selected';\r\nimport Checkbox from '../checkbox/checkbox'\r\nimport './goods.css';\r\n\r\nclass Goods extends Component {\r\n    comments(count) {\r\n        if(count > 0) {\r\n            return (<span><span className={'comment'}>{/* comment icon */}</span>{count}</span>);\r\n        }\r\n    }\r\n\r\n    trend(trend) {\r\n        return (<span className={trend >= 0 ? 'color-green' : 'color-red'}>{trend}</span>);\r\n    }\r\n\r\n    cost(cost) {\r\n        return (<span className={'goods-cost'}>{String.fromCharCode(8381).repeat(cost)}</span>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'goods'}>\r\n                <h1>Список товаров</h1>\r\n                <table className={'goods-table'}>\r\n                    <thead className={'goods-table__header'}>\r\n                    <tr className={'goods-table__row'}>\r\n                        <th className={'goods-table__cell-id'}>#</th>\r\n                        <th className={'goods-table__cell-name'}>Название</th>\r\n                        <th className={'goods-table__cell-rate'}>Рейтинг</th>\r\n                        <th className={'goods-table__cell-trend'}>Тренд</th>\r\n                        <th className={'goods-table__cell-cost'}>Ценовой сегмент</th>\r\n                        <th className={'goods-table__cell-comment'}>Отзывы покупателей</th>\r\n                        <th className={'goods-table__cell-cart'}>В корзину</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody className={'goods-table__body'}>\r\n                    {this.props.goods.map((item) => (\r\n                        <tr className={'goods-table__row'} key={'row-'+item.id}>\r\n                            <td className={'goods-table__cell-id'}>{item.id}</td>\r\n                            <td className={'goods-table__cell-name'}>{item.title}</td>\r\n                            <td className={'goods-table__cell-rate'}>{item.rate}</td>\r\n                            <td className={'goods-table__cell-trend'}>{this.trend(item.trend)}</td>\r\n                            <td className={'goods-table__cell-cost'}>{this.cost(item.cost)}</td>\r\n                            <td className={'goods-table__cell-comment'}>{this.comments(item.comment)}</td>\r\n                            <td className={'goods-table__cell-cart'}>\r\n                                <Checkbox\r\n                                    onChange={this.props.changeItemInCart}\r\n                                    checked={this.props.cart.indexOf(item.id) !== -1}\r\n                                    id={item.id}/>\r\n                                </td>\r\n                        </tr>))}\r\n                    </tbody>\r\n                </table>\r\n                <Selected count={this.props.cart.length}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Goods;\r\n","export function changeItemInCart(id) {\r\n    return {\r\n        type: 'CHANGE_ITEM_IN_CART',\r\n        id\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Goods from '../components/goods/goods';\r\nimport {changeItemInCart} from '../store/actions/changeItemInCart';\r\n\r\nclass GoodsContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Goods goods={this.props.goods}\r\n                   cart={this.props.cart}\r\n                   changeItemInCart={this.props.changeItemInCart}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        goods: state.goods,\r\n        cart: state.cart\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    changeItemInCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoodsContainer);\r\n","import React, { Component } from 'react';\r\nimport './advantage.css'\r\n\r\nclass Advantage extends Component {\r\n    render() {\r\n        return (\r\n            <div className={'advantage'}>\r\n                <h2 className={'advantage__header'}>Преимущества покупок у нас</h2>\r\n                <div className={'advantage_container'}>\r\n                    <div className={'advantage__item'}>\r\n                        <span className={'advantage__num'}>1</span>\r\n                        <div className={'advantage__text'}>Мы классные.</div>\r\n                    </div>\r\n                    <div className={'advantage__item'}>\r\n                        <span className={'advantage__num'}>2</span>\r\n                        <div className={'advantage__text'}>Мы классные и очень-очень крутые</div>\r\n                    </div>\r\n                    <div className={'advantage__item'}>\r\n                        <span className={'advantage__num'}>3</span>\r\n                        <div className={'advantage__text'}>Даже сложно написать всю нашу крутость :)</div>\r\n                    </div>\r\n                </div>\r\n                <div className={'advantage__arrow'}></div>\r\n                <div className={'advantage__footer'}>И всё это - для вас!</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Advantage;\r\n","import React, { Component } from 'react';\r\nimport Advantage from  '../advantage/advantage'\r\nimport './cart.css'\r\n\r\nclass Card extends Component {\r\n    cartEmpty() {\r\n        return (<div className={'cart'}><h1>Корзина пуста</h1><Advantage/></div>);\r\n    }\r\n\r\n    cartNoEmpty() {\r\n        let length = this.props.cart.length;\r\n        let goods = this.props.cart.map((item) => this.props.goods.find((element) => element.id === item).title).join(', ');\r\n        return (\r\n            <div className={'cart'}>\r\n                <h1>Ваши товары</h1>\r\n                <div className={'cart__content'}>\r\n                    Вы выбрали {length} {length > 1 ? 'товара' : 'товар'}: <span className={'cart__goods'}>{goods}</span>\r\n                </div>\r\n                <Advantage/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (this.props.cart.length === 0 ? this.cartEmpty() : this.cartNoEmpty());\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport Cart from '../components/cart/cart';\r\nimport {changeItemInCart} from \"../store/actions/changeItemInCart\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CartContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Cart goods={this.props.goods}\r\n                  cart={this.props.cart} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        goods: state.goods,\r\n        cart: state.cart\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    changeItemInCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\r\n","import { createStore } from 'redux';\r\nimport { goodsReducer } from './reducers/goods';\r\n\r\nconst initialState = {\r\n    goods: [\r\n        {\r\n            id: 1,\r\n            title: 'Супер-товар',\r\n            rate: 2.87,\r\n            trend: '-',\r\n            cost: 4,\r\n            comment: 5,\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Тоже хороший товар',\r\n            rate: 1.94,\r\n            trend: '+14',\r\n            cost: 4,\r\n            comment: 0,\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Неплохой товар',\r\n            rate: 1.69,\r\n            trend: '+4',\r\n            cost: 3,\r\n            comment: 0,\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'Плохой товар',\r\n            rate: 18.69,\r\n            trend: '-4',\r\n            cost: 5,\r\n            comment: 0,\r\n        },\r\n        {\r\n            id: 5,\r\n            title: 'Неизвестный товар',\r\n            rate: 8.69,\r\n            trend: '-14',\r\n            cost: 1,\r\n            comment: 20,\r\n        }\r\n    ],\r\n    cart: []\r\n};\r\n\r\nexport default createStore(goodsReducer, initialState)\r\n","export function goodsReducer(state = false, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_ITEM_IN_CART':\r\n            return {\r\n                ...state,\r\n                cart: state.cart.indexOf(action.id) === -1\r\n                    ? [...state.cart, action.id]\r\n                    : state.cart.filter(item => action.id !== item)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport {Switch, Route, HashRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport GoodsContainer from './containers/Goods';\nimport CartContainer from './containers/Cart';\nimport store from './store/store'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <HashRouter>\n            <main className={'container'}>\n              <Switch>\n                <Route exact path='/'\n                       component={GoodsContainer}/>\n                <Route path='/goods'\n                       component={GoodsContainer}/>\n                <Route path='/shopping_cart'\n                       component={CartContainer}/>\n              </Switch>\n            </main>\n          </HashRouter>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}